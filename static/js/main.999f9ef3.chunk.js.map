{"version":3,"sources":["components/Button/Button.js","container/Calc/Calc.js","components/OutputZone/OutputZone.js","components/Options/Options.js","components/DigitsWrapper/DigitsWrapper.js","components/OperatorsWrapper/OperatorsWrapper.js","App.js","serviceWorker.js","index.js"],"names":["Button","props","className","style","color","backgroundColor","bg","border","height","width","minHeight","minHidth","boxShadow","cursor","onClick","e","isEntry","handleEntry","deleteEntry","evaluate","clearEntries","value","initialState","Calc","entry","target","innerText","prevEntry","state","result","setState","slice","finalResult","eval","id","this","Component","OutputZone","Options","customizedOption","Object","keys","map","val","i","key","DigitsWrapper","digits","customizedDigits","length","OperatorsWrapper","operators","customizedOperators","App","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","onUpdate","onSuccess","catch","error","ReactDOM","render","document","getElementById","URL","process","href","origin","addEventListener","fetch","response","contentType","headers","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.999f9ef3.chunk.js","sourcesContent":["import React from 'react';\n\nconst Button=(props)=>{\n\n\treturn(\n\t\t\t<button className=\"button\"\n\t\t\t style={{color:\"white\",backgroundColor:props.bg,border:\"none\",height:\"100%\",width:\"100%\",minHeight:\"55px\",minHidth:\"55px\",boxShadow:\"3px 3px 5px 1px rgba(0,0,0,0.4)\",cursor:\"pointer\"}}  \n\t\t\t onClick={(e)=>props.isEntry===\"1\"? props.handleEntry(e): props.isEntry===\"2\"? props.deleteEntry(e):props.isEntry===\"3\"?props.evaluate(e) :props.clearEntries(e)}>{props.value}</button>\n\t\t)\n}\n\nexport default Button;","import React,{Component}from 'react';\nimport OutputZone from '../../components/OutputZone/OutputZone.js';\nimport Options from '../../components/Options/Options.js';\nimport DigitsWrapper from '../../components/DigitsWrapper/DigitsWrapper.js';\nimport OperatorsWrapper from '../../components/OperatorsWrapper/OperatorsWrapper.js';\nimport \"./Calc.css\";\n\nconst initialState=\"\";\n\nclass Calc extends Component{\n\tconstructor(){\n\t\tsuper()\n\t\tthis.state={\n\t\t\tresult:\"\"\n\t\t}\n\t}\n\thandleEntry=(e)=>{\n\t\tlet\tentry=e.target.innerText;\n\t\tlet prevEntry=this.state.result;\n\t\tthis.setState({result:(prevEntry+entry)})\n\t}\n\tclearEntries=()=>{\n\t\tthis.setState({result:initialState})\n\t}\n\tdeleteEntry=()=>{\n\t\tthis.setState({result:this.state.result.slice(0,-1)})\n\t\t\n\t}\n\tevaluate=()=>{\n\t\tlet prevEntry=this.state.result;\n\t\ttry{\n\t\t\tlet finalResult=(eval(prevEntry) || \"\" ) + \"\";\n\t\t\tthis.setState({result:finalResult})\n\t\t}catch(e){\n\t\t\tlet finalResult=\"Error!\"\n\t\t\tthis.setState({result:finalResult})\n\t\t}\n\t\t}\n\trender(){\n\n\t\treturn(\n\t\t\t\t<div id=\"calc-wrapper\">\n\t\t\t\t\t<header>First Calcultor</header>\n\t\t\t\t\t<OutputZone result={this.state.result}/>\n\t\t\t\t\t<Options  handleEntry={this.handleEntry} clearEntries={this.clearEntries} deleteEntry={this.deleteEntry}/>\n\t\t\t\t\t<div id=\"digits-operator-wrapper\">\n\t\t\t\t\t\t<DigitsWrapper handleEntry={this.handleEntry} evaluate={this.evaluate}/>\n\t\t\t\t\t\t<OperatorsWrapper  handleEntry={this.handleEntry}/>\n\t\t\t\t\t</div>\t\n\t\t\t\t\t<footer>By Angelo</footer>\n\t\t\t\t</div>\n\t\t\t)\n\n\t}\n}\nexport default Calc;","import React from 'react';\nimport \"./OutputZone.css\";\n\nconst OutputZone=(props)=>{\n\n\treturn(\n\t\t\t<div id=\"output-zone\">{props.result}</div> \n\t\t)\n}\n\nexport default OutputZone;","import React from 'react';\nimport Button from '../Button/Button.js';\nimport \"./Options.css\";\n\nconst Options=(props)=>{\n\tconst Options={\n\t\t\"CE\":\"black\",\n\t\t\"(\":\"#5563ED\",\n\t\t\")\":\"#5563ED\",\n\t\t\"DEL\":\"rgba(255,0,0,0.8)\"\n\t}\n\tconst customizedOption=Object.keys(Options).map((val,i)=>{\n\t\tif (i===0) {\n\t\treturn <Button value={val} bg={Options[val]} clearEntries={props.clearEntries} isEntry=\"0\" key={val+i}/>\n\t}\n\tif (i===3) {\n\t\treturn <Button value={val} bg={Options[val]} deleteEntry={props.deleteEntry} isEntry=\"2\" key={val+i}/>\n\t}\n\treturn <Button value={val} bg={Options[val]} handleEntry={props.handleEntry} isEntry=\"1\" key={val+i}/>\n\t})\n\treturn(\n\t\t\t<div id=\"options-wrapper\">{customizedOption}</div> \n\t\t)\n}\n\nexport default Options;","import React from 'react';\nimport Button from '../Button/Button.js';\nimport './DigitsWrapper.css';\n\nconst DigitsWrapper=(props)=>{\n\tconst digits=[9,8,7,6,5,4,3,2,1,\"=\",'.',0]\n\tconst customizedDigits=digits.map((val,i)=>{\n\t\tif(i===digits.length-3){\n\t\t\treturn <Button value={val} bg=\"black\"  evaluate={props.evaluate} isEntry=\"3\" key={val}/>\n\t\t}\n\t\treturn <Button value={val} bg=\"#5563ED\" handleEntry={props.handleEntry} isEntry=\"1\" key={val}/>\n\t})\n\treturn(\n\t\t\t<div id=\"digits-wrapper\">{customizedDigits}</div> \n\t\t)\n}\n\nexport default DigitsWrapper;","import React from 'react';\nimport Button from '../Button/Button.js';\nimport './OperatorsWrapper.css';\n\nconst OperatorsWrapper=(props)=>{\n\tconst operators={\n\t\t\"/\":\"#5563ED\", \n\t\t\"*\":\"#5563ED\",\n\t\t\"-\":\"#5563ED\",\n\t\t\"+\":\"#5563ED\",\n\t\t}\n\tconst customizedOperators=Object.keys(operators).map((val,i)=>{\n\t\treturn <Button value={val} bg={operators[val]} handleEntry={props.handleEntry} isEntry=\"1\" key={val+i}/>\n\t})\n\treturn(\n\t\t\t<div id=\"operators-wrapper\">{customizedOperators}</div> \n\t\t)\n}\n\nexport default OperatorsWrapper;","import React from 'react';\nimport './App.css';\nimport Calc from './container/Calc/Calc.js'\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Calc/>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();\n"],"sourceRoot":""}